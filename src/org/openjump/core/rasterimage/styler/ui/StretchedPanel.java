package org.openjump.core.rasterimage.styler.ui;

import com.vividsolutions.jump.util.Range;
import org.openjump.core.rasterimage.styler.ColorMapEntry;
import org.openjump.core.rasterimage.RasterSymbology;

/**
 *
 * @author GeomaticaEAmbiente
 */
public class StretchedPanel extends javax.swing.JPanel {

    /**
     * Creates new form StretchedPanel
     * @param range
     * @throws java.lang.Exception
     */
    public StretchedPanel(Range range) throws Exception {

        initComponents();

        minValue = (Double) range.getMin();
        maxValue = (Double) range.getMax();

        fixComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel_Value = new javax.swing.JLabel();
        jLabel_Label = new javax.swing.JLabel();
        jLabel_MinLabel = new javax.swing.JLabel();
        jLabel_MinValue = new javax.swing.JLabel();
        jTextField_MinLabel = new javax.swing.JTextField();
        jLabel_MaxLabel = new javax.swing.JLabel();
        jLabel_MaxValue = new javax.swing.JLabel();
        jTextField_MaxLabel = new javax.swing.JTextField();
        jPanel_ShowGradient = new javax.swing.JPanel();
        jButton_Custom = new javax.swing.JButton();

        setAlignmentY(0.0F);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(365, 160));
        setMinimumSize(new java.awt.Dimension(365, 160));
        setPreferredSize(new java.awt.Dimension(365, 160));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        jLabel_Value.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/openjump/core/rasterimage/styler/resources/Bundle"); // NOI18N
        jLabel_Value.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_Value.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabel_Value, gridBagConstraints);

        jLabel_Label.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel_Label.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_Label.text")); // NOI18N
        jLabel_Label.setMaximumSize(new java.awt.Dimension(30, 14));
        jLabel_Label.setMinimumSize(new java.awt.Dimension(30, 14));
        jLabel_Label.setPreferredSize(new java.awt.Dimension(30, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabel_Label, gridBagConstraints);

        jLabel_MinLabel.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_MinLabel.text")); // NOI18N
        jLabel_MinLabel.setMaximumSize(new java.awt.Dimension(83, 14));
        jLabel_MinLabel.setMinimumSize(new java.awt.Dimension(83, 14));
        jLabel_MinLabel.setPreferredSize(new java.awt.Dimension(83, 14));
        jLabel_MinLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel_MinLabel, gridBagConstraints);

        jLabel_MinValue.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_MinValue.text")); // NOI18N
        jLabel_MinValue.setMaximumSize(new java.awt.Dimension(83, 14));
        jLabel_MinValue.setMinimumSize(new java.awt.Dimension(83, 14));
        jLabel_MinValue.setPreferredSize(new java.awt.Dimension(83, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel_MinValue, gridBagConstraints);

        jTextField_MinLabel.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jTextField_MinLabel.text")); // NOI18N
        jTextField_MinLabel.setMinimumSize(new java.awt.Dimension(83, 20));
        jTextField_MinLabel.setPreferredSize(new java.awt.Dimension(83, 20));
        jTextField_MinLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MinLabelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jTextField_MinLabel, gridBagConstraints);

        jLabel_MaxLabel.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_MaxLabel.text")); // NOI18N
        jLabel_MaxLabel.setToolTipText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_MaxLabel.toolTipText")); // NOI18N
        jLabel_MaxLabel.setMaximumSize(new java.awt.Dimension(83, 14));
        jLabel_MaxLabel.setMinimumSize(new java.awt.Dimension(83, 14));
        jLabel_MaxLabel.setPreferredSize(new java.awt.Dimension(83, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel_MaxLabel, gridBagConstraints);

        jLabel_MaxValue.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jLabel_MaxValue.text")); // NOI18N
        jLabel_MaxValue.setMaximumSize(new java.awt.Dimension(83, 14));
        jLabel_MaxValue.setMinimumSize(new java.awt.Dimension(83, 14));
        jLabel_MaxValue.setPreferredSize(new java.awt.Dimension(83, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel_MaxValue, gridBagConstraints);

        jTextField_MaxLabel.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jTextField_MaxLabel.text")); // NOI18N
        jTextField_MaxLabel.setMinimumSize(new java.awt.Dimension(83, 20));
        jTextField_MaxLabel.setPreferredSize(new java.awt.Dimension(83, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jTextField_MaxLabel, gridBagConstraints);

        jPanel_ShowGradient.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_ShowGradient.setMinimumSize(new java.awt.Dimension(80, 75));
        jPanel_ShowGradient.setPreferredSize(new java.awt.Dimension(73, 75));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel_ShowGradient, gridBagConstraints);

        jButton_Custom.setText(bundle.getString("org.openjump.core.rasterimage.styler.ui.StretchedPanel.jButton_Custom.text")); // NOI18N
        jButton_Custom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CustomActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jButton_Custom, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_MinLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MinLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MinLabelActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        //Set label for elevation
        jLabel_MinValue.setText(Double.toString(GUIUtils.round(minValue, 3)));
        jLabel_MaxValue.setText(Double.toString(GUIUtils.round(maxValue, 3)));
        jTextField_MinLabel.setText(Double.toString(GUIUtils.round(minValue, 3)));
        jTextField_MaxLabel.setText(Double.toString(GUIUtils.round(maxValue, 3)));
        
    }//GEN-LAST:event_formComponentShown

    private void jButton_CustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CustomActionPerformed
             
        customGradient();
        
    }//GEN-LAST:event_jButton_CustomActionPerformed

    private void comboBox_GrdientActionPerformed(java.awt.event.ActionEvent evt) {
        
        try{
            if (comboBox_Gradient != null) {                
                
                ColorMapEntry[] paletteColorMapEntries = ((GradientCanvas) comboBox_Gradient.getSelectedItem()).getColorMapEntries();
                updateRasterStyler(paletteColorMapEntries);
                
                GUIUtils utils = new GUIUtils();
                utils.setGradientPanel(jPanel_ShowGradient, paletteColorMapEntries);            
            }
        }catch (Exception ex){
            System.out.println(ex);
        }
    }

    private void fixComponents() throws Exception {
         
        setComboBox();
        GUIUtils.addGradientComboBoxToList(comboBox_Gradient);
        
        GradientCanvas gradientCanvas = (GradientCanvas) comboBox_Gradient.getItemAt(0);
        colorMapEntries = gradientCanvas.getColorMapEntries();
        
        rasterStyler = new RasterSymbology(RasterSymbology.ColorMapType.RAMP);
        updateRasterStyler(colorMapEntries);

        GUIUtils utils = new GUIUtils();
        utils.setGradientPanel(jPanel_ShowGradient, colorMapEntries);   
    
    }

    private void setComboBox() {

        comboBox_Gradient = GUIUtils.createStandardGradientComboBox(width, height);
        comboBox_Gradient.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_GrdientActionPerformed(evt);
            }
        });

        java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 1.0; 
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(comboBox_Gradient, gridBagConstraints);

    }

    private void customGradient(){
        
        GradientCanvas gc = (GradientCanvas) comboBox_Gradient.getSelectedItem();
        ColorMapEntry[] cme = gc.getColorMapEntries();
        
        CustomGradientColorsDialog customGradientDialog = new CustomGradientColorsDialog(null, true, cme);
        customGradientDialog.setLocationRelativeTo(this);
        customGradientDialog.setVisible(true);
                
        ColorMapEntry[] newGradient = customGradientDialog.getColorMapEntries();
        if(newGradient != null){

            GUIUtils.updateGradientComboBoxes(newGradient, width, height);
            comboBox_Gradient.setSelectedIndex(comboBox_Gradient.getItemCount()-1);
            
        }
        
    }
    
    private void updateRasterStyler(ColorMapEntry[] paletteColorMapEntries) throws Exception{
        
        rasterStyler = new RasterSymbology(RasterSymbology.ColorMapType.RAMP);
        for (ColorMapEntry paletteColorMapEntrie : paletteColorMapEntries) {
            double quantity = (maxValue - minValue) * paletteColorMapEntrie.getUpperValue() + minValue;
            rasterStyler.addColorMapEntry(quantity, paletteColorMapEntrie.getColor());
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Custom;
    private javax.swing.JLabel jLabel_Label;
    private javax.swing.JLabel jLabel_MaxLabel;
    private javax.swing.JLabel jLabel_MaxValue;
    private javax.swing.JLabel jLabel_MinLabel;
    private javax.swing.JLabel jLabel_MinValue;
    private javax.swing.JLabel jLabel_Value;
    private javax.swing.JPanel jPanel_ShowGradient;
    private javax.swing.JTextField jTextField_MaxLabel;
    private javax.swing.JTextField jTextField_MinLabel;
    // End of variables declaration//GEN-END:variables

    private final double minValue;
    private final double maxValue;
    private ColorMapEntry[] colorMapEntries;
    private GradientComboBox comboBox_Gradient;
    private RasterSymbology rasterStyler; 
    private final int width = 200;
    private final int height = 18;
    
    public RasterSymbology getRasterStyler(){
        return rasterStyler;
    }
  
    

}
